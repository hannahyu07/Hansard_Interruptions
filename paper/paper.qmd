---
title: "Silenced in the Chamber: Analyzing Gendered Speech Interruptions in the Australian Parliament (1998–2022)"
author: 
  - Hannah Yu
  - Rohan Alexander
thanks: "Code and data are available at: https://github.com/hannahyu07/Hansard_Interruptions"
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

# Introduction {#sec-introduction}

Although interjections are officially prohibited during a member's speech in the Australian Parliament, interruptions still occur frequently, particularly during heated debates often fueled by political disagreements [@aphInterruptions2025]. This raises crucial questions about gender dynamics within the context of parliamentary debates in Australia. Concerns are growing regarding whether women are disproportionately interrupted compared to men, highlighting potential underlying biases that could influence the effectiveness and fairness of parliamentary proceedings.

There has been considerable research on speech patterns and gender-based interruptions in government speeches across various countries. For instance, during U.S. Supreme Court confirmation hearings, female and minority nominees are interrupted more frequently than their male and white counterparts [@genderRaceSCCHearings2024]. Additionally, in the US Congress, women also experienced more interruptions than men, especially during discussions of women’s issues, where women are more than twice as likely to be interrupted compared to non-gendered topics [@genderInterruptionsCongress2022]. In the Ecuadorian Congress, female legislators not only deliver fewer speeches but also speak for shorter durations compared to their male peers. Furthermore, women often wait longer to regain the floor after interruptions, leading them to strategically shorten their speeches to minimize further disruptions. However, women in authoritative positions can mitigate some of these interruption-related penalties, with senior women's speeches often exceeding those of men in length when they achieve comparable levels of experience or hold significant roles [@vera2021politics].

Contrastingly, studies of the Australian High Court reveal a different dynamic [@jacobiPredictabilityInterruptions]. The result suggested that contrary to the U.S. Supreme Court, there is no significant difference between female and male justices regarding interruptions. Although women experience a higher rate of interruptions relative to their speaking time, the subtlety of this effect suggests that gender dynamics within the Australian court might be more balanced compared to the U.S. Supreme Court. This highlights the differences in how judicial interactions are influenced by gender across different legal systems.

Building on existing literature suggesting that the Australian High Court may exhibit better gender dynamics than its counterparts in the US, we aim to delve deeper into the issue of gender-based interruptions within the Australian Parliament. Utilizing the Australian Hansard, the official written record of parliamentary debates which has been digitized by Lindsay Katz and Rohan Alexander, we have access to comprehensive records of all parliamentary proceedings from 1998 to 2022 [@katz2023digitization]. From the dataset, we aim to analyze the frequency and context of interruptions based on gender. Specifically, our study will focus on comparing the rates at which male and female parliamentarians are interrupted during their speeches.

The remainder of this paper is structured as follows: @sec-data demonstrates the data used for this paper, @sec-model describes, justifies, and explains my model, @sec-results highlights the results of the predictions using tables and graphs, and @sec-discussion contains important implications and conclusions based on the findings.

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(arrow)
library(here)
library(rstanarm)
library(modelsummary)
library(ggplot2)
library(knitr)
library(tibble)
library(gt)
library(patchwork)
library(kableExtra)
library(dplyr)
library(stringr)

library(stm)
library(quanteda)
library(tm)
```

```{r}
#| include: false
#| warning: false
#| message: false
hansard_corpus <- read_parquet(here::here("data/02-analysis_data/cleaned_data.parquet"))
```

```{r}
#| include: false
#| warning: false
#| message: false
# View the first few rows
head(hansard_corpus, 150)

```


```{r}
#| include: false
#| warning: false
#| message: false
summary(hansard_corpus)

```

# Data {#sec-data}
Data analysis is performed using statistical programming language R [@citeR], with packages `tidyverse` [@citeTidyverse], `arrow` [@citeArrow]`, here` [@citeHere], `rstanarm` [@rstanarm], `modelsummary` [@citeModleSummary], `ggplot2` [@citeGgplot2], `knitr` [@citeKnitr], `tibble` [@citeTibble], `gt` [@citegt], `patchwork` [@citePatchwork], `testthat` [@citetestthat], `kableExtra` [@citeKableExtra], `dyplyr` [@citedplyr], `stringr` [@citestringr], and `lubridate` [@citelubridate].

## Data Source

The data used in this research is a compiled digital record of the Australian Hansard that documents parliamentary proceedings from 1998 t0 2022 [@KatzAlexander2022]. This comprehensive database includes variables such as speaker details (e.g., name, party, gender, electorate), timestamps, speech content, and flags for interjections, questions, and other procedural elements. This dataset is favoured for its utility in examining parliamentary gender dynamics, speech patterns, and the evolution of political discourse over an extensive period.

## Data Cleaning

## Measurement
The Hansard dataset represents various real-world parliamentary phenomena through carefully constructed variables. However, as with all datasets, some considerations and limitations arise when transitioning from real-world events to structured data. This section discusses what the variables of interest are measuring and potential challenges in their representation.

Firstly, the variable interject, which indicates whether a speaker’s statement was interrupted, relies on the identification of interruptions as recorded in the Hansard transcripts. However, the variable may not fully capture the intent or context of interruptions, as it cannot distinguish between interruptions made in jest, as points of order, or as serious challenges.
Additionally, subtle interruptions not formally acknowledged in the record or overlapping statements may go unflagged. 

The variable gender, representing the speaker's gender, was inferred by merging the dataset with external biographical sources, such as the AustralianPoliticians package. While this approach ensures consistency, it assumes the accuracy of external data sources, which may contain errors or outdated information. Furthermore, the binary classification of gender in the dataset does not account for non-binary or other gender identities, potentially limiting the scope of gender-based analyses.

The party variable categorizes speakers by their political affiliation. This information is directly parsed from the Hansard transcripts, where the party name or abbreviation is provided alongside the speaker's details. However, variations in party naming conventions, particularly for smaller or region-specific parties, required standardization using external datasets like Party Facts. These efforts may introduce minor inconsistencies, especially in cases of historical party name changes or mergers.

Lastly, word_count quantifies the length of each speech by counting the number of words in the speech text. While straightforward to compute, this variable does not differentiate between substantive contributions and procedural or repetitive language. Additionally, transcription errors or inconsistencies in the Hansard record might slightly affect word count accuracy, though these are rare.

Overall, while the variables provide meaningful representations of parliamentary behavior, they are shaped by the limitations of transcription accuracy, data inference, and structural simplifications inherent in processing complex real-world phenomena.

## Outcome Variables


```{r}
#| include: false
#| warning: false
#| message: false
# Calculate interruptions and speeches by gender, including rounding the proportion
interruptions_by_gender <- hansard_corpus %>%
  group_by(gender) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n(),
    .groups = 'drop'  # Automatically drop the grouping
  ) %>%
  mutate(
    interruption_proportion = round(total_interruptions / total_speeches, 2)  # Calculate and round the proportion of interruptions
  )

# Calculate total interruptions and speeches for all genders combined, with rounding
interruptions_all <- hansard_corpus %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n()
  ) %>%
  mutate(
    gender = "All",
    interruption_proportion = round(total_interruptions / total_speeches, 2)  # Round the proportion here as well
  )

# Combine the results for specific genders and "All"
final_results <- bind_rows(interruptions_by_gender, interruptions_all)

# Print the results
print(final_results)

```


```{r}
#| include: false
#| warning: false
#| message: false
#Based on the following data it shows that in fact men seem to be interrupted more on avergae than women in the australian parliment, but this could be changed from the "unknown" category.
# Summarize interruptions by year and gender
interruptions_summary <- hansard_corpus %>%
  group_by(year, gender) %>%
  summarise(
    total_interruptions = sum(as.numeric(interject), na.rm = TRUE),
    .groups = 'drop'
  )

# Summarize total interruptions for all genders combined per year
interruptions_all <- hansard_corpus %>%
  group_by(year) %>%
  summarise(
    total_interruptions = sum(as.numeric(interject), na.rm = TRUE),
    .groups = 'drop'
  ) %>%
  mutate(
    gender = "All"
  )

# Combine gender-specific and "All" categories data
final_data <- bind_rows(interruptions_summary, interruptions_all)

```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-1
#| fig-cap: "Yearly Interruptions in Australian Parliament by Gender"

ggplot(final_data, aes(x = year, y = total_interruptions, color = gender)) +
  geom_line(size = 1.2) +  # Thicker lines for better visibility
  geom_point(size = 2) +  # Larger points to highlight data
  labs(
    title = "Yearly Interruptions in Australian\nParliament by Gender",
    x = "Year",
    y = "Total Interruptions",
    color = "Gender"
  ) +
  scale_color_brewer(palette = "Set2") +  # Use a colorblind-friendly palette
  theme_minimal(base_size = 14) +  # Adjust base font size for readability
  theme(
    legend.position = "top",  # Move legend to the top
    legend.title = element_text(size = 10, face = "bold"),  # Bold legend title
    legend.text = element_text(size = 8),  # Adjust legend text size
    plot.title = element_text(size = 14, face = "bold",  hjust = 0.5),  # Bold title
    axis.title = element_text(size = 12),  # Axis title size
    axis.text = element_text(size = 11)  # Axis text size
  ) +
  scale_x_continuous(breaks = seq(min(final_data$year), max(final_data$year), by = 5))  # Adjust x-axis breaks

```




```{r}
#| include: false
#| warning: false
#| message: false

# Ensure that 'date' is correctly formatted as Date and 'year' is extracted
hansard_corpus <- hansard_corpus %>%
  mutate(
    date = as.Date(date, format = "%Y-%m-%d"),  # Convert date if it's in character form
    year = if_else(is.na(date), NA_integer_, year(date))  # Extract year, handle NA dates
  )

# Assuming hansard_corpus has the year extracted already. If not, add this in the mutate step.
interruptions_by_year_gender <- hansard_corpus %>%
  group_by(year, gender) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n(),
    .groups = 'drop'
  ) %>%
  mutate(
    interruption_proportion = total_interruptions / total_speeches
  )

# Calculate for all genders per year
interruptions_by_year_all <- hansard_corpus %>%
  group_by(year) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n(),
    .groups = 'drop'
  ) %>%
  mutate(
    gender = "All",
    interruption_proportion = total_interruptions / total_speeches
  )

# Combine data
final_data1 <- bind_rows(interruptions_by_year_gender, interruptions_by_year_all)

```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-2
#| fig-cap: "Yearly Interruptions Proportions in Australian Parliament by Gender"

ggplot(final_data1, aes(x = year, y = interruption_proportion, color = gender)) +
  geom_line(size = 1.2) +  # Thicker lines for better visibility
  geom_point(size = 2) +  # Larger points to highlight data
  labs(
    title = "Yearly Interruptions Proportions\nin Australian Parliament by Gender",  # Add \n for a line break
    x = "Year",
    y = "Total Interruptions Proportions",
    color = "Gender"
  ) +
  scale_color_brewer(palette = "Set2") +  # Use a colorblind-friendly palette
  theme_minimal(base_size = 14) +  # Adjust base font size for readability
  theme(
    legend.position = "top",  # Move legend to the top
    legend.title = element_text(size = 10, face = "bold"),  # Bold legend title
    legend.text = element_text(size = 8),  # Adjust legend text size
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5),  # Center the title
    axis.title = element_text(size = 12),  # Axis title size
    axis.text = element_text(size = 11)  # Axis text size
  ) +
  scale_x_continuous(breaks = seq(min(final_data$year), max(final_data$year), by = 5))  # Adjust x-axis breaks

```

The outcome variable, interject, serves as a binary indicator of whether a speaker was interrupted during their speech.
To explore the distributions of interruptions over years, we introduce the following plots. @fig-1 illustrates interruptions in the Australian Parliament from 1998 to 2022, categorized by gender. Notably, male speakers consistently faced more interruptions than females, with a peak in 2011 and a subsequent decline. Female speakers experienced fewer interruptions, with relatively stable figures across the years. The "Unknown" category, consistently low, suggests either minimal occurrence or documentation of such interruptions.

To provide a fair comparison of interruptions across different genders within the Australian Parliament, we normalize the data by calculating proportions. This method addresses the gender imbalance in parliament, ensuring that the analysis reflects the frequency of interruptions relative to each gender's representation. @fig-2 presents the proportions of speeches interrupted by gender. It indicates that male speakers had a higher proportion of their speeches interrupted, especially during the mid-2000s to early 2010s, though the gap between genders has narrowed over time. The proportion of interruptions for female speakers generally mirrors these fluctuations, implying that specific topics or periods may have incited more active parliamentary interactions. The "Unknown" gender shows minimal changes, highlighting its limited data representation. This analysis points out both the consistency and evolution of gender dynamics within parliamentary debates over the years.

## Predictor Variables

```{r}
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Gender-Based Interruption Analysis in Parliamentary Speeches "
#| label: tbl-1


# Create a clean and professional table
final_results %>%
  gt() %>%
  tab_header(
    title = "Proportion of Interruptions by Gender",
  ) %>%
  fmt_percent(
    columns = interruption_proportion,
    decimals = 2
  ) %>%
  cols_label(
    gender = "Gender",
    total_interruptions = "Total Interruptions",
    total_speeches = "Total Speeches",
    interruption_proportion = "Interruption Proportion"
  ) %>%
  tab_style(
    style = cell_borders(sides = "all", color = "gray", weight = px(1)),
    locations = cells_body()
  ) %>%
  tab_options(
    table.font.size = px(14),
    heading.title.font.size = px(18),
    heading.subtitle.font.size = px(14),
    data_row.padding = px(5),
    table.border.top.color = "gray",
    table.border.bottom.color = "gray"
  )%>%
  tab_style(
    style = cell_text(align = "left"),  # Align text to the left
    locations = cells_body(columns = everything())  # Apply to all columns in the body
  )

```

The predictor variables in this analysis capture key characteristics and contextual factors that may influence the likelihood of interruptions during parliamentary speeches. Gender represents the speaker's gender, allowing us to examine whether men and women experience interruptions at different rates. Party indicates the speaker's political affiliation, reflecting potential partisan dynamics that could impact speech interactions. The government status variable identifies whether the speaker belongs to the governing party, which may affect their level of authority or the degree of scrutiny they face from the opposition. Lastly, the word count quantifies the length of each speech, providing insight into whether longer speeches are more likely to invite interruptions. Together, these variables offer a comprehensive framework for understanding how personal and contextual factors contribute to the dynamics of parliamentary discourse.

@tbl-1 provides a clear view of the proportion of interruptions by gender across all speeches in the dataset. The results show that male speakers were interrupted more frequently (21% of speeches) compared to female speakers (18% of speeches). Interestingly, the interruption proportion for unknown gender speakers is significantly lower, at only 11%. Overall, considering all speeches regardless of gender, the interruption proportion stands at 18%. This data suggests that gender may play a role in how frequently speakers are interrupted during parliamentary sessions, with male speakers facing a higher rate of interruption. This could reflect broader dynamics of gender interaction within the parliamentary setting.

```{r}
#| include: false
#| warning: false
#| message: false
print(final_data1)

```


```{r}
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Gender Interruption Proportions Annual Comparison"
#| label: tbl-compareyear

# Prepare the data
comparison_data <- final_data1 %>%
  pivot_wider(
    id_cols = year,
    names_from = gender,
    values_from = interruption_proportion
  ) %>%
  mutate(
    More_Interrupted_Gender = case_when(
      Male > Female ~ "Male",
      Female > Male ~ "Female",
      TRUE ~ "Equal"  # This handles cases where the interruption proportions are the same
    )
  )

# Generate the table using gt
comparison_data %>%
  select(year, More_Interrupted_Gender) %>%  # Include only year and the gender comparison
  gt() %>%
  cols_label(
    year = "Year",
    More_Interrupted_Gender = "More Interrupted Gender"
  ) %>%
  tab_style(
    style = cell_text(align = "left"),  # Align text to the left
    locations = cells_body(columns = everything())  # Apply to all columns in the body
  )

```


@tbl-compareyear displays the more interrupted gender every year in the parliament and compares all members and only chamber members. While most years are the same, there is a notable shift in the gender experiencing more frequent interruptions from 2018 to 2020. In the broader dataset, males were more frequently interrupted; however, this pattern shifts in the non-federal chamber data, where females became the more interrupted gender during these years. This change highlights the variability in gender dynamics within different parliamentary environments and suggests that factors specific to non-federal chamber settings may influence these interaction patterns more significantly for female members.



```{r}
#| include: false
#| warning: false
#| message: false
# Filter and aggregate data based on the 'question' flag and 'gender'
interruptions_question_analysis <- hansard_corpus %>%
  filter(gender %in% c("Male", "Female")) %>%
  group_by(gender, is_question = as.factor(question)) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n(),
    total_speeches = sum(total_speeches),
    interruption_proportion = total_interruptions / total_speeches,
    .groups = 'drop'
  )

# Print the resulting dataset to verify
print(interruptions_question_analysis)

```

```{r}
#| include: false
#| warning: false
#| message: false
# Filter and aggregate data based on the 'question' flag and 'gender'
interruptions_question_analysis <- hansard_corpus %>%
  filter(gender %in% c("Male", "Female")) %>%
  group_by(gender, is_answer = as.factor(answer)) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n(),
    total_speeches = sum(total_speeches),
    interruption_proportion = total_interruptions / total_speeches,
    .groups = 'drop'
  )

# Print the resulting dataset to verify
print(interruptions_question_analysis)
```


```{r}
#| include: false
#| warning: false
#| message: false
# Summarize interruptions by year, party, and gender
interruptions_summary <- hansard_corpus %>%
  group_by(year, party, gender) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    .groups = 'drop'
  )

```

```{r}
#| include: false
#| warning: false
#| message: false
# Plotting the data as a grouped bar chart
ggplot(interruptions_summary, aes(x = party, y = total_interruptions, fill = gender)) +
  geom_bar(stat = "identity", position = position_dodge()) +  # Use position_dodge() for grouped bars
  labs(
    title = "Interruptions by Gender and Party",
    x = "Party",
    y = "Total Interruptions",
    fill = "Gender"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability

```

```{r}
#| include: false
#| warning: false
#| message: false
# Filter data for only LP and ALP parties and summarize interruptions by gender
interruptions_major_parties <- hansard_corpus %>%
  filter(party %in% c("LP", "ALP")) %>%
  mutate(
    interject = as.numeric(interject)  # Ensure interject is numeric
  ) %>%
  group_by(party, gender) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    .groups = 'drop'
  )

```

```{r}
#| include: false
#| warning: false
#| message: false
# Assuming the 'hansard_corpus' and 'interject' are properly loaded and converted
# First, let's create a summary for each gender within the two parties.
interruptions_gender <- hansard_corpus %>%
  filter(party %in% c("LP", "ALP")) %>%
  group_by(party, gender) %>%
  summarise(
    total_interruptions = sum(as.numeric(interject), na.rm = TRUE),
    .groups = 'drop'
  )

```

```{r}
#| include: false
#| warning: false
#| message: false
# Plotting with the inclusion of "All"
ggplot(interruptions_major_parties, aes(x = party, y = total_interruptions, fill = gender)) +
  geom_bar(stat = "identity", position = position_dodge(), width = 0.7) +
  scale_fill_manual(values = c("Female" = "#FF9999", "Male" = "#9999FF")) +  # Color for "All"
  labs(
    title = "Gender-based and Total Interruptions\nin Major Australian Political Parties",
    x = "Political Party",
    y = "Total Interruptions",
    fill = "Gender"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust=0.5),
    plot.subtitle = element_text(face = "italic"),
    axis.title = element_text(size = 12),
    axis.text.x = element_text(angle = 0, vjust = 0.5),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 9)
  )

```

```{r}
#| include: false
#| warning: false
#| message: false
# Calculate the normalized proportion (probability of interruption)
interruptions_normalized <- hansard_corpus %>%
  filter(party %in% c("LP", "ALP")) %>%
  group_by(party, gender) %>%
  summarise(
    total_interruptions = sum(as.numeric(interject), na.rm = TRUE),  # Total interruptions by gender and party
    total_speeches = n(),  # Total speeches by gender and party
    .groups = 'drop'
  ) %>%
  mutate(
    interruption_probability = total_interruptions / total_speeches  # Normalized proportion (probability)
  )

```

```{r}
#| include: false
#| warning: false
#| message: false
# Plotting the normalized proportions
ggplot(interruptions_normalized, aes(x = party, y = interruption_probability, fill = gender)) +
  geom_bar(stat = "identity", position = position_dodge(), width = 0.7) +  # Bar plot with proportions
  scale_fill_manual(values = c("Female" = "#FF9999", "Male" = "#9999FF")) +  # Custom colors for gender
  labs(
    title = "Normalized Gender-based Interruptions\nin Major Australian Political Parties",
    x = "Political Party",
    y = "Probability of Interruption",
    fill = "Gender"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    axis.title = element_text(size = 12),
    axis.text.x = element_text(angle = 0, vjust = 0.5),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 9)
  )


```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-3
#| fig-cap: "Interruptions in Major Australian Political Parties by Gender"

# Remove the legend from the first plot
plot1 <- ggplot(interruptions_major_parties, aes(x = party, y = total_interruptions, fill = gender)) +
  geom_bar(stat = "identity", position = position_dodge(), width = 0.7) +
  scale_fill_manual(values = c("Female" = "#FF9999", "Male" = "#9999FF")) +  # Colors for genders
  labs(
    x = "Political Party",
    y = "Total Interruptions"
  ) +
  theme_minimal() +
  theme(
    plot.subtitle = element_text(face = "bold", size = 12, hjust = 0.5),  # Subtitle styling
    axis.title = element_text(size = 11),
    axis.text.x = element_text(angle = 0, vjust = 0.5),
    legend.position = "none",  # Remove the legend
    legend.text = element_text(size = 9)
  )

# Keep the legend only in the second plot
plot2 <- ggplot(interruptions_normalized, aes(x = party, y = interruption_probability, fill = gender)) +
  geom_bar(stat = "identity", position = position_dodge(), width = 0.7) +  # Bar plot with proportions
  scale_fill_manual(values = c("Female" = "#FF9999", "Male" = "#9999FF")) +  # Custom colors for gender
  labs(
    x = "Political Party",
    y = "Probability of Interruption",
    fill = "Gender"
  ) +
  theme_minimal() +
  theme(
    plot.subtitle = element_text(face = "bold", size = 12, hjust = 0.5),  # Subtitle styling
    axis.title = element_text(size = 11),
    axis.text.x = element_text(angle = 0, vjust = 0.5),
    legend.title = element_text(size = 10),
    legend.text = element_text(size = 9)
  )

# Add a combined title and arrange plots with patchwork
(plot1 + plot2) +
  plot_annotation(
    title = "Interruptions in Major Australian Political Parties by Gender",
    theme = theme(
      plot.title = element_text(size = 12, face = "bold", hjust = 0.5)  # Big title styling
    )
  )

```

@fig-3 focuses on the Liberal Party (LP) and the Australian Labor Party (ALP), the two major parties in Australian politics, to analyze interruptions by gender. Since these parties dominate parliamentary proceedings, they provide a significant sample of gender interaction dynamics. The total interruptions are higher in the ALP compared to the LP, with male members experiencing more interruptions than female members in both parties. We use proportions to normalize the data, accounting for differences in gender representation within these parties. This approach helps us understand the rate at which female and male members are interrupted relative to their participation, offering a clearer insight into the parliamentary discourse dynamics.



```{r}
#| include: false
#| warning: false
#| message: false
# Calculate basic summary statistics for in.gov
in_gov_stats <- hansard_corpus %>%
  summarise(
    Count_In_Gov = sum(in.gov == 1, na.rm = TRUE),
    Count_Not_In_Gov = sum(in.gov == 0, na.rm = TRUE),
    Count_NA = sum(is.na(in.gov)),
    Total = n()
  )

print(in_gov_stats)

```

```{r}
#| include: false
#| warning: false
#| message: false
# Calculate basic summary statistics for in.gov
interject_stats <- hansard_corpus %>%
  summarise(
    Count_Interject = sum(interject == 1, na.rm = TRUE),
    Count_No_Interject = sum(interject == 0, na.rm = TRUE),
    Count_NA = sum(is.na(interject)),
    Total = n()
  )

print(interject_stats)
```


```{r}
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Interruption Summary by Government Status"
#| label: tbl-ingov1

# Assume that interruption_summary is already prepared as previously coded
interruption_summary <- hansard_corpus %>%
  mutate(
    in_gov = factor(in.gov, levels = c(0, 1), labels = c("In Opposition", "In Government")),
    interject = factor(interject, levels = c(0, 1), labels = c("No", "Yes"))
  ) %>%
  group_by(in_gov, interject) %>%
  summarise(
    Count = n(),
    .groups = 'drop'
  ) %>%
  arrange(in_gov, desc(interject)) %>%
  rename(
    `Government Status` = in_gov,
    `Interruption` = interject,
    `Count` = Count
  )


# Create a clean and professional table
interruption_summary %>%
  gt() %>%
  tab_style(
    style = cell_text(align = "left"),  # Align text to the left
    locations = cells_body(columns = everything())  # Apply to all columns in the body
  )


```


```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-gov
#| fig-cap: "Count of Interruptions by Government Status and Gender"

# Prepare the data with absolute counts
interruption_counts <- hansard_corpus %>%
  filter(gender %in% c("Male", "Female")) %>%
  filter(fedchamb_flag == 0) %>%
  mutate(
    in_gov = factor(ifelse(is.na(in.gov), "NA", ifelse(in.gov == 1, "In Government", "In Opposition")),
                    levels = c("In Opposition", "In Government", "NA")),
    interject = factor(interject, levels = c(0, 1), labels = c("No", "Yes"))
  ) %>%
  group_by(in_gov, interject, gender) %>%
  summarise(
    Count = n(),
    .groups = 'drop'
  )


# Plot using ggplot2 with updated colors and adjusted x-axis labels
ggplot(interruption_counts, aes(x = in_gov, y = Count, fill = interject)) +
  geom_bar(stat = "identity", position = "stack") +
  facet_wrap(~ gender, scales = "free_y") +
  labs(
    title = "Interruptions Count by Government Status and Gender",
    x = "Government Status",
    y = "Count of Interruptions",
    fill = "Interruption Occurred"
  ) +
  scale_fill_manual(values = c("No" = "steelblue", "Yes" = "salmon")) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 7, angle = 0, vjust = 2, hjust = 0.5), # Adjust label positioning
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
    legend.position = "bottom"
  )

  
```


@tbl-ingov1, @tbl-ingov2, and @fig-gov offer a detailed look at interruptions during parliamentary sessions, categorized by members' government status and gender. Notably, interruptions are extremely rare for members with clearly identified status. This indicates a potential correlation between established government status and more orderly interactions, highlighting the importance of role clarity in maintaining decorum.

However, the significant amount of missing data makes reliable inferences about the true nature of interruptions and their correlation with member status challenging. The vast majority of interruptions occur when the government status of the speaker is unknown. This trend is consistent across both the comprehensive dataset and the subset limited to non-federal chamber sessions. Interruptions are exceedingly rare for members whose government status is known, with only 22 interruptions for those "In Government" and an even fewer 4 for those "In Opposition" across all data. Due to this substantial amount of missing information, it is very difficult to firmly conclude whether our observed patterns hold true.



```{r}
#| include: false
#| warning: false
#| message: false
#| tbl-cap: "Summary of Parliamentary Session Activities and Interruptions"
#| label: tbl-qa_interrupt1
# Assuming hansard_corpus is already loaded and prepped
summary_stats <- hansard_corpus %>%
  mutate(
    question_numeric = as.numeric(as.character(question)),
    answer_numeric = as.numeric(as.character(answer))
  ) %>%
  summarise(
    Questions = sum(question_numeric, na.rm = TRUE),
    Answers = sum(answer_numeric, na.rm = TRUE),
    Total_Interruptions = sum(interject, na.rm = TRUE),
    Interruptions_During_Questions = sum(interject[question_numeric == 1], na.rm = TRUE),
    Interruptions_During_Answers = sum(interject[answer_numeric == 1], na.rm = TRUE)
  )


summary_stats %>%
  gt() %>%
  cols_label(
    Questions = "Questions",
    Answers = "Answers",
    Total_Interruptions = "Total Interruptions",
    Interruptions_During_Questions = "Question Interrupted",
    Interruptions_During_Answers = "Answer Interrupted"
  ) %>%
  tab_style(
    style = cell_text(align = "left"),
    locations = cells_body(columns = everything())
  ) %>%
  tab_options(
    table.width = pct(100),  # Set the table width to 100% of the container
    table.align = "left"  # Align the table to the left of the container
  ) %>%
  tab_style(
    style = cell_text(align = "left"),  # Align text to the left
    locations = cells_body(columns = everything())  # Apply to all columns in the body
  )
  


```



```{r}
#| include: false
#| warning: false
#| message: false
# Review entries where questions or answers are marked
question_instances <- hansard_corpus %>%
  filter(question == 1)
print(question_instances)
```



```{r}
#| include: false
#| warning: false
#| message: false
# Filter and aggregate data based on the 'question' flag and 'gender'
interruptions_question_analysis <- hansard_corpus %>%
  filter(gender %in% c("Male", "Female")) %>%
  group_by(gender, is_question = as.factor(question)) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n(),
    total_speeches = sum(total_speeches),
    interruption_proportion = total_interruptions / total_speeches,
    .groups = 'drop'
  )

# Print the resulting dataset to verify
print(interruptions_question_analysis)

```

```{r}
#| include: false
#| warning: false
#| message: false
# Filter and aggregate data based on the 'answer' flag and 'gender'
interruptions_question_analysis <- hansard_corpus %>%
  filter(gender %in% c("Male", "Female")) %>%
  group_by(gender, is_answer = as.factor(answer)) %>%
  summarise(
    total_interruptions = sum(interject, na.rm = TRUE),
    total_speeches = n(),
    total_speeches = sum(total_speeches),
    interruption_proportion = total_interruptions / total_speeches,
    .groups = 'drop'
  )

# Print the resulting dataset to verify
print(interruptions_question_analysis)
```


```{r}
#| include: false
#| warning: false
#| message: false
# Assuming your dataset is named 'hansard_corpus'
# Calculate the word count for each 'body' entry
hansard_corpus1 <- hansard_corpus %>%
  mutate(word_count = str_count(body, "\\b\\w+\\b"))

# Print the data to see the word counts
head(hansard_corpus1)
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-gov3
#| fig-cap: "Histogram of Word Counts in Speeches (Up to 250 Words)"

hansard_corpus1 <- hansard_corpus1 %>%
  filter(gender %in% fedchamb_flag == 0) 

# Enhanced histogram with interjection data
ggplot(hansard_corpus1 %>% filter(word_count <= 250), aes(x = word_count, fill = as.factor(interject))) +
  geom_histogram(binwidth = 25, position = "identity", alpha = 0.6) +
  labs(
    title = "Histogram of Word Counts in Speeches",
    x = "Word Count",
    y = "Frequency",
    fill = "Interjection Occurred"
  ) +
  scale_fill_manual(values = c("0" = "steelblue", "1" = "salmon"), labels = c("No", "Yes")) +
  theme_minimal() +
  theme(legend.position = "top") +
  theme(
   plot.title = element_text(size = 14, face = "bold", hjust = 0.5))
```
@fig-gov3 shows word counts in speeches divided into two categories: speeches where an interjection occurred and those without any interruptions. We can see that speeches without interruptions (blue bars) are more frequent across all word count ranges, especially as the number of words increases. Conversely, interrupted speeches (red bars) are less frequent and generally shorter. This trend suggests that interruptions tend to happen in shorter speeches or possibly cause speakers to shorten their remarks. This graph gives a clear visual indication of how interruptions might disrupt or influence the length of parliamentary speeches.










```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-density
#| fig-cap: "Density Distribution of Word Count by Gender"
# Filter the data to include only speeches with word counts under 500 and valid gender values
filtered_data <- hansard_corpus %>%
  filter(word_count <= 500, gender != "Unknown")

# Create the density plot with boundary outlines
ggplot(filtered_data, aes(x = word_count, fill = gender, color = gender)) +
  geom_density(alpha = 0.5) +
  scale_fill_manual(
    values = c("Female" = "pink", "Male" = "lightblue")
  ) +
  scale_color_manual(
    values = c("Female" = "red", "Male" = "blue")
  ) +
  labs(
    title = "Density Distribution of Word Count by Gender (Word Count ≤ 500)",
    x = "Word Count",
    y = "Density",
    fill = "Gender",
    color = "Gender"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),  # Center the title
    legend.position = "right"               # Place the legend to the right
  )

```
The density plot @fig-density shows that the word count distribution for both male and female speakers is highly left-skewed, with the majority of speeches being very short. Both genders peak at shorter speeches, but male speakers tend to have even shorter speeches compared to females, as indicated by the higher peak density for men in the lower word count range. Notably, female speakers show a small rise in density between word counts of 200 and 300, suggesting that a subset of their speeches tends to be slightly longer compared to their male counterparts. This subtle difference highlights variation in speaking patterns between genders.



```{r}
#| echo: false
#| warning: false
#| message: false
#| label: tbl-gov4
#| tbl-cap: "Gender-Based Interruptions and Word Count"
# Assuming hansard_corpus1 is already loaded and prepared
# First, filter to include only speeches up to 1000 words and only Male or Female
filtered_data <- hansard_corpus1 %>%
  filter(gender %in% c("Male", "Female"))

# Group by gender and whether there was an interjection
summary_table <- filtered_data %>%
  group_by(gender, interject) %>%
  summarise(
    num_speeches = n(),
    average_words = mean(word_count, na.rm = TRUE),
    min_words = min(word_count, na.rm = TRUE),
    max_words = max(word_count, na.rm = TRUE),
    .groups = 'drop'
  )

summary_table %>%
  gt()%>%
  tab_style(
    style = cell_text(align = "left"),  # Align text to the left
    locations = cells_body(columns = everything())  # Apply to all columns in the body
  ) %>%
  cols_label(
    gender = "Gender",
    interject = "Interruption",
    num_speeches = "Total Speeches",
    average_words = "Average Words",
    min_words = "Min Words",
    max_words = "Max Words")


```



@tbl-gov4 highlights that, on average, females tend to speak longer than males before an interruption occurs. For uninterrupted speeches, females average 560.72 words compared to 448.67 words for males. Even when interrupted, female speeches still have a higher average word count (37.76 words) than interrupted male speeches (28.76 words). This suggests that while females may face greater challenges overall, they tend to hold the floor longer before interruptions occur. However, the substantial drop in average word count for both genders during interruptions shows the disruptive impact, with females experiencing a steeper decline relative to their uninterrupted averages. This pattern indicates that while females often manage to speak at greater length initially, interruptions disproportionately diminish their overall speaking opportunities.



# Model {#sec-model}
## Model set-up

I utilized a Bayesian logistic regression model to examine the relationship between speech interruptions and the speakers' genders. The model is formulated as follows:

\begin{align}
y_i|\pi_i &\sim \mbox{Bern}(\pi_i) \\
\mbox{logit}(\pi_i) &= \alpha + \beta_1 \times \mbox{gender}_i + \beta_2 \times \mbox{party}_i + \beta_3 \times \mbox{word\_count}_i + \beta_4 \times \mbox{word\_count\_gender}_i \nonumber \\
\alpha &\sim \mbox{Normal}(0, 5) \nonumber \\
\beta_1 &\sim \mbox{Normal}(0, 2.5) \nonumber \\
\beta_2 &\sim \mbox{Normal}(0, 2.5) \nonumber \\
\beta_3 &\sim \mbox{Normal}(0, 2.5) \nonumber \\
\beta_4 &\sim \mbox{Normal}(0, 2.5) \nonumber
\end{align}

# Results {#sec-results}
```{r}
#| include: false
#| eval: true
#| warning: false
#| message: false

model1 <-
  readRDS(file = here::here("models/model1.rds"))

```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults1
#| tbl-cap: "Model 1 for Interruptions (n = 1000)"
#| warning: false

modelsummary(
  list(
    "Speech Interrupted" = model1
  ),
  statistic = "mad"
  )
```

@tbl-modelresults1 identifies key predictors including gender, party, and word count of speech interruptions in parliamentary proceedings. Gender plays an important role, with male speakers more likely to experience interruptions compared to female speakers. This suggests that men face slightly higher odds of interjections during their speeches. Party affiliation also significantly influences interruptions, with some parties, such as the ALP, experiencing more frequent interjections, while others, like the LNP, are interrupted less often. These patterns highlight how political dynamics can shape interactions in debates.

Additionally, the length of speeches affects interruptions, with longer speeches slightly less likely to be interrupted, suggesting that concise speeches may invite more interjections. Notably, the interaction between word count and gender reveals that male speakers experience a slight increase in interruptions as their speech length increases, a trend that is less pronounced for female speakers. These findings underscore the combined effects of gender, party dynamics, and speech characteristics in shaping interruption patterns.

```{r}
#| include: false

library(modelsummary)

# Generate the modelsummary table with significance stars and custom formatting
modelsummary(
  list(
    "Speech Interrupted" = model1
  ),
  statistic = "({std.error})",           # Include standard errors in parentheses
  stars = TRUE,                          # Add significance stars
  output = "markdown",                   # Choose the desired output format (e.g., "latex", "html", "markdown")
  title = "Logistic Regression: Predicting Speech Interruption",
  coef_map = c(                          # Rename variables for clarity
    "(Intercept)" = "Intercept",
    "gender" = "Gender (Female)",
    "party" = "Party Affiliation",
    "word_count" = "Word Count",
    "word_count_gender" = "Word Count × Gender"
  )
)

```


```{r}
#| include: false
#| eval: true
#| warning: false
#| message: false
model2 <-
  readRDS(file = here::here("models/model2.rds"))

```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults2
#| tbl-cap: "Model 2 for Interruptions (n = 1000)"
#| warning: false

modelsummary(
  list(
    "Speech Interrupted" = model2
  ),
  statistic = "mad"
  )
```

The logistic regression model @tbl-modelresults2 continues to highlight key predictors of interruptions during speeches, with the removal of party. Male speakers remain more likely to experience interruptions than female speakers, but the effect size has slightly decreased, reflecting a smaller increase in the likelihood of interruptions. The relationship between speech length and interruptions remains consistent, with longer speeches slightly reducing the likelihood of interruptions. The interaction between word count and gender also remains unchanged, suggesting that longer speeches by male speakers are still slightly more likely to invite interruptions compared to those by females.

```{r}
#| include: false
#| eval: true
#| warning: false
#| message: false
hansard_topics <- readRDS(file = here::here("models/hansard_topics.rda"))
```



```{r}
#| echo: false
#| eval: true
#| warning: false
labelTopics(hansard_topics)
```

To analyze discussions in the Australian Parliament, I applied Structural Topic Modeling (STM) to identify key themes in speeches from 2020. The process began with data preprocessing, where I filtered the dataset to include only relevant entries, removed missing values, and structured the text data for analysis. A document-feature matrix (DFM) was then created, representing word frequencies while eliminating punctuation, stopwords, and low-frequency terms to improve model efficiency.

The STM model was trained with 10 topics and incorporated party affiliation and speaker gender as prevalence covariates, allowing for an examination of how these factors influence topic distribution. The model was optimized over 50 iterations, ensuring convergence and stability. The final output provided a breakdown of the dominant topics, with key terms extracted using highest probability words, FREX words (distinctive to each topic), Lift words (rare but highly relevant), and Score words (best summarizing a topic’s meaning).

```{r, fig.width=10, fig.height=6}
#| echo: false
#| eval: true
#| label: tbl-stm_prop
#| tbl-cap: "STM Topic Proportion Plot "
#| warning: false
plot(hansard_topics, type = "summary", n = 5)
```

@tbl-stm_prop provides an overview of the most prevalent themes in the 2020 Australian parliamentary speeches. The x-axis represents the expected topic proportions, indicating how frequently each topic appears across the dataset. The y-axis lists the top topics, summarized by their most representative words.

From this visualization, Topic 5 ("minister, government, time, just") emerges as the most dominant theme, suggesting that government policies, ministerial discussions, and legislative matters were central to parliamentary discourse. Topic 8 ("people, government, need, now") follows closely, highlighting debates around public needs, government interventions, and social policies. Other significant topics include healthcare (Topic 10), economic measures (Topic 4), legal and family-related issues (Topic 7), and national security (Topic 1).

The distribution of topics provides insights into policy priorities and legislative focus areas during 2020. By incorporating metadata such as speaker affiliation and gender, further analysis can uncover how different political groups or demographics engaged with these key issues.


```{r}
#| include: false 
#par(mar = c(3, 10, 0.2, 1))  # Increase left margin
#plot(stm_gender, "gender", model = hansard_topics, topics = c(1, 2, 3),
     #cex = 0.02)  # Reduce text size
```



```{r}
#| include: false 
bertopic_model <- readRDS("models/bertopic_model.rds")
str(bertopic_model)  # Check structure
```


```{r}
str(bertopic_model)

```

```{r}
#| include: false 
methods(class = class(bertopic_model))
names(bertopic_model)

# Convert lists to readable text
topic_info$Representation <- sapply(topic_info$Representation, function(x) paste(x, collapse=", "))
topic_info$Representative_Docs <- sapply(topic_info$Representative_Docs, function(x) paste(x, collapse=" | "))

# View the cleaned dataframe
print(topic_info)

```
We then applied BERTopic, a powerful topic modeling technique that leverages transformer-based embeddings and clustering methods to extract coherent topics from large text corpora. The modeling process involved preprocessing the parliamentary transcripts, fitting the BERTopic model, and visualizing the results to derive insights into the dominant themes discussed.

The initial dataset consisted of Australian parliamentary speeches, which were first filtered to include only those from the year 2020. After preprocessing steps such as text cleaning and tokenization, BERTopic was applied to identify underlying topics. The model was trained on the speech text, generating a set of distinct topics characterized by their most representative words. The results were stored and analyzed to understand the frequency and nature of discussions in parliament.


```{r}
#| echo: false
#| eval: true
#| label: tbl-bert1
#| tbl-cap: "Most Common Topics in\nParliamentary Speeches (2020)"
#| warning: false

ggplot(top_topics, aes(x = reorder(Name, Count), y = Count)) +
  geom_bar(stat = "identity", fill = "steelblue", color = "black") +
  coord_flip() +
  labs(
    title = "Most Common Topics in\nParliamentary Speeches (2020)",
    x = "Topic",
    y = "Number of Speeches"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(size = 14, face = "bold", margin = margin(b = 10)), # Add bottom margin
    plot.margin = margin(t = 20, r = 20, b = 20, l = 20) # Increase space
  )

```
@tbl-bert1 presents the most common topics in parliamentary speeches, ranked by the number of speeches associated with each topic. Notably, aged care and homecare, infrastructure and roads, and emergency response to fires emerged as the most frequently discussed themes, reflecting key policy concerns in 2020. Other prominent topics included childcare and education, motions and legislative processes, and government economic policies. These findings suggest that parliamentary focus was heavily directed toward public services and economic development, particularly in the wake of major national events such as bushfires and the ongoing pandemic response.


```{r}
#| echo: false
#| eval: true
#| label: tbl-bert2
#| tbl-cap: "Word Cloud"
#| warning: false
library(wordcloud)

# Get the most frequent words
word_freqs <- table(unlist(strsplit(paste(topic_info$Representation, collapse = " "), ", ")))

# Generate word cloud
wordcloud(names(word_freqs), freq = word_freqs, max.words = 100, colors = brewer.pal(8, "Dark2"))

```

A complementary word cloud further highlights the most frequently occurring words within the parliamentary discussions. Terms such as question, minister, interjecting, house, and Morrison suggest a heavy emphasis on political debates, procedural discussions, and executive actions. The prominence of words related to economic policies and public welfare indicates that these areas dominated parliamentary discourse in 2020.

By applying BERTopic modeling, I was able to extract and visualize key themes from Australian parliamentary speeches. The results indicate a strong focus on public services, infrastructure, legislative procedures, and economic policies, aligning with major political and social developments of that year. The combination of ranked topic distributions and textual analysis through the word cloud provides a comprehensive view of how parliamentary discourse was shaped in 2020. These findings can be further explored to analyze trends over time or compare discourse across different political actors.



### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.








# Discussion {#sec-discussion}

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

## Diagnostics




\newpage


# References


